// <auto-generated />
using System;
using ExerciseService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExerciseService.Migrations
{
    [DbContext(typeof(ExerciseDbContext))]
    partial class ExerciseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExerciseService.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExerciseId"));

                    b.Property<bool>("IsFinished")
                        .HasColumnType("boolean");

                    b.Property<int>("LevelId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("ExerciseId");

                    b.HasIndex("LevelId");

                    b.HasIndex("UserId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            ExerciseId = 1,
                            IsFinished = false,
                            LevelId = 1,
                            StartedAt = new DateTime(2022, 9, 12, 11, 13, 58, 784, DateTimeKind.Utc).AddTicks(2880),
                            UserId = 1
                        },
                        new
                        {
                            ExerciseId = 2,
                            IsFinished = false,
                            LevelId = 2,
                            StartedAt = new DateTime(2022, 9, 12, 11, 13, 58, 784, DateTimeKind.Utc).AddTicks(2880),
                            UserId = 1
                        },
                        new
                        {
                            ExerciseId = 3,
                            IsFinished = false,
                            LevelId = 3,
                            StartedAt = new DateTime(2022, 9, 12, 11, 13, 58, 784, DateTimeKind.Utc).AddTicks(2880),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ExerciseService.Models.Level", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LevelId"));

                    b.Property<int>("LevelDetailsId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LevelId");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            LevelId = 1,
                            LevelDetailsId = 1,
                            Name = "Beginner"
                        },
                        new
                        {
                            LevelId = 2,
                            LevelDetailsId = 2,
                            Name = "Intermediate"
                        },
                        new
                        {
                            LevelId = 3,
                            LevelDetailsId = 3,
                            Name = "Advanced"
                        });
                });

            modelBuilder.Entity("ExerciseService.Models.LevelDetails", b =>
                {
                    b.Property<int>("LevelDetailsId")
                        .HasColumnType("integer");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<int>("Exhale")
                        .HasColumnType("integer");

                    b.Property<int>("Inhale")
                        .HasColumnType("integer");

                    b.HasKey("LevelDetailsId");

                    b.ToTable("LevelDetails");

                    b.HasData(
                        new
                        {
                            LevelDetailsId = 1,
                            Duration = 10000,
                            Exhale = 1000,
                            Inhale = 1000
                        },
                        new
                        {
                            LevelDetailsId = 2,
                            Duration = 20000,
                            Exhale = 2000,
                            Inhale = 2000
                        },
                        new
                        {
                            LevelDetailsId = 3,
                            Duration = 30000,
                            Exhale = 3000,
                            Inhale = 3000
                        });
                });

            modelBuilder.Entity("ExerciseService.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExternalUserID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExternalUserID = 0,
                            Name = "John"
                        },
                        new
                        {
                            Id = 2,
                            ExternalUserID = 0,
                            Name = "Mary"
                        },
                        new
                        {
                            Id = 3,
                            ExternalUserID = 0,
                            Name = "Jane"
                        });
                });

            modelBuilder.Entity("ExerciseService.Models.Exercise", b =>
                {
                    b.HasOne("ExerciseService.Models.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExerciseService.Models.User", "User")
                        .WithMany("Exercises")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExerciseService.Models.LevelDetails", b =>
                {
                    b.HasOne("ExerciseService.Models.Level", "Level")
                        .WithOne("LevelDetails")
                        .HasForeignKey("ExerciseService.Models.LevelDetails", "LevelDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");
                });

            modelBuilder.Entity("ExerciseService.Models.Level", b =>
                {
                    b.Navigation("LevelDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("ExerciseService.Models.User", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
